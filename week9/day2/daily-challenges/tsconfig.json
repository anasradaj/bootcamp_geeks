{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */
    // "incremental": true,
    // "composite": true,
    // "tsBuildInfoFile": "./.tsbuildinfo",
    // "disableSourceOfProjectReferenceRedirect": true,
    // "disableSolutionSearching": true,
    // "disableReferencedProjectLoad": true,

    /* Language and Environment */
    "target": "es2016", // Compile le TypeScript vers du JavaScript compatible ES2016
    // "lib": [],
    // "jsx": "preserve",
    // "libReplacement": true,
    // "experimentalDecorators": true,
    // "emitDecoratorMetadata": true,
    // "jsxFactory": "",
    // "jsxFragmentFactory": "",
    // "jsxImportSource": "",
    // "reactNamespace": "",
    // "noLib": true,
    // "useDefineForClassFields": true,
    // "moduleDetection": "auto",

    /* Modules */
    "module": "commonjs", // Spécifie le système de modules pour le code JS émis (Node.js utilise commonjs)
    "rootDir": "./src", // Le dossier racine de vos fichiers TypeScript source
    // "moduleResolution": "node10",
    // "baseUrl": "./",
    // "paths": {},
    // "rootDirs": [],
    // "typeRoots": [],
    // "types": [],
    // "allowUmdGlobalAccess": true,
    // "moduleSuffixes": [],
    // "allowImportingTsExtensions": true,
    // "rewriteRelativeImportExtensions": true,
    // "resolvePackageJsonExports": true,
    // "resolvePackageJsonImports": true,
    // "customConditions": [],
    // "noUncheckedSideEffectImports": true,
    // "resolveJsonModule": true,
    // "allowArbitraryExtensions": true,
    // "noResolve": true,

    /* JavaScript Support */
    // "allowJs": true,
    // "checkJs": true,
    // "maxNodeModuleJsDepth": 1,

    /* Emit */
    // "declaration": true,
    // "declarationMap": true,
    // "emitDeclarationOnly": true,
    // "sourceMap": true, // Génère des fichiers .map pour le débogage (très utile)
    // "inlineSourceMap": true,
    // "noEmit": true,
    // "outFile": "./",
    "outDir": "./dist", // Le dossier où les fichiers JavaScript compilés seront placés
    // "removeComments": true,
    // "importHelpers": true,
    // "downlevelIteration": true,
    // "sourceRoot": "",
    // "mapRoot": "",
    // "inlineSources": true,
    // "emitBOM": true,
    // "newLine": "crlf",
    // "stripInternal": true,
    // "noEmitHelpers": true,
    // "noEmitOnError": true,
    // "preserveConstEnums": true,
    // "declarationDir": "./",

    /* Interop Constraints */
    // "isolatedModules": true,
    // "verbatimModuleSyntax": true,
    // "isolatedDeclarations": true,
    // "erasableSyntaxOnly": true,
    // "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    // "preserveSymlinks": true,
    "forceConsistentCasingInFileNames": true,

    /* Type Checking */
    "strict": true, // Active toutes les options de vérification de type strictes (très recommandé pour TypeScript)
    // "noImplicitAny": true,
    // "strictNullChecks": true,
    // "strictFunctionTypes": true,
    // "strictBindCallApply": true,
    // "strictPropertyInitialization": true,
    // "strictBuiltinIteratorReturn": true,
    // "noImplicitThis": true,
    // "useUnknownInCatchVariables": true,
    // "alwaysStrict": true,
    // "noUnusedLocals": true, // Bon pour détecter les variables non utilisées
    // "noUnusedParameters": true, // Bon pour détecter les paramètres non utilisés
    // "exactOptionalPropertyTypes": true,
    // "noImplicitReturns": true, // Assure que toutes les branches de code d'une fonction retournent une valeur
    // "noFallthroughCasesInSwitch": true, // Empêche les "fallthrough" non intentionnels dans les switch
    // "noUncheckedIndexedAccess": true,
    // "noImplicitOverride": true,
    // "noPropertyAccessFromIndexSignature": true,
    // "allowUnusedLabels": true,
    // "allowUnreachableCode": true,

    /* Completeness */
    // "skipDefaultLibCheck": true,
    "skipLibCheck": true // Permet d'ignorer la vérification de type des fichiers de déclaration des librairies (accélère la compilation)
  },
  // Spécifie les fichiers ou dossiers à inclure dans le processus de compilation TypeScript
  "include": ["src/**/*"]
}